{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kevin\\\\Desktop\\\\workspace\\\\Zenika\\\\front-end-test\\\\src\\\\views\\\\pages\\\\vendorProduct\\\\ManageServices.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Table, Popconfirm, Input, Button, Space, Col, Row, Select, Switch } from 'antd';\nimport { SearchOutlined } from '@ant-design/icons';\nimport Actions from '../../common/Actions';\nimport { listProducts } from '../../../state/ducks/products/actions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  Option\n} = Select;\nconst {\n  Search\n} = Input;\n\nclass ManageServices extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      selectedRowKeys: [],\n      searchText: '',\n      searchedColumn: '',\n      selValue: '1',\n      sortedInfo: {},\n      filteredInfo: {},\n      searchInput: {},\n      products: []\n    };\n    this.onSwitchChange = this.onSwitchChange.bind(this);\n    this.onChange = this.onChange.bind(this);\n    this.onSearch = this.onSearch.bind(this);\n    this.onSelect = this.onSelect.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSearch = this.handleSearch.bind(this);\n    this.handleReset = this.handleReset.bind(this);\n    this.getColumnSearchProps = this.getColumnSearchProps.bind(this);\n  }\n\n  componentDidMount() {\n    this.props.listProducts();\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    // console.log('prevProps', prevProps.productList)\n    // console.log('prevProps', this.props.productList)\n    // console.log('prevState', prevState)\n    if (prevProps.productList !== this.props.productList) {\n      this.setState({\n        products: this.props.productList.products\n      }); // console.log('products', this.state.products)\n    }\n  }\n\n  onSwitchChange(checked) {// console.log(`switch to ${checked}`)\n  }\n\n  onChange(value) {// console.log(value)\n  }\n\n  onSearch(value) {// console.log('onSearch', value)\n  }\n\n  onSelect(value) {\n    // console.log('onSelect', value)\n    this.setState({\n      selValue: value\n    });\n  }\n\n  handleChange(pagination, filters, sorter, extra) {// console.log('params', pagination, filters, sorter, extra)\n  }\n\n  handleSearch(selectedKeys, confirm, dataIndex) {\n    confirm();\n    this.setState({\n      searchText: selectedKeys[0],\n      searchedColumn: dataIndex\n    });\n  }\n\n  handleReset(clearFilters) {\n    clearFilters();\n    this.setState({\n      searchText: ''\n    });\n  }\n\n  getColumnSearchProps(dataIndex) {\n    return {\n      filterDropdown: ({\n        setSelectedKeys,\n        selectedKeys,\n        confirm,\n        clearFilters\n      }) => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          padding: 8\n        },\n        children: [/*#__PURE__*/_jsxDEV(Input, {\n          ref: node => {\n            this.searchInput = node;\n          },\n          placeholder: `Search ${dataIndex}`,\n          value: selectedKeys[0],\n          onChange: e => setSelectedKeys(e.target.value ? [e.target.value] : []),\n          onPressEnter: () => this.handleSearch(selectedKeys, confirm, dataIndex),\n          style: {\n            marginBottom: 8,\n            display: 'block'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Space, {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            type: \"primary\",\n            onClick: () => this.handleSearch(selectedKeys, confirm, dataIndex),\n            icon: /*#__PURE__*/_jsxDEV(SearchOutlined, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 21\n            }, this),\n            size: \"small\",\n            style: {\n              width: 90\n            },\n            children: \"Search\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => this.handleReset(clearFilters),\n            size: \"small\",\n            style: {\n              width: 90\n            },\n            children: \"Reset\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this),\n      filterIcon: filtered => /*#__PURE__*/_jsxDEV(SearchOutlined, {\n        style: {\n          color: filtered ? '#1890ff' : undefined\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }, this),\n      onFilter: (value, record) => record[dataIndex] ? record[dataIndex].toString().toLowerCase().includes(value.toLowerCase()) : '',\n      onFilterDropdownVisibleChange: visible => {\n        if (visible) {\n          setTimeout(() => this.searchInput.select(), 100);\n        }\n      }\n    };\n  }\n\n  render() {\n    const columns = [// {\n    //   title: 'Image',\n    //   width: 100,\n    //   dataIndex: 'image',\n    //   key: 'image',\n    //   render(e) {\n    //     return (\n    //       <span className=\"Pm-list-img\">\n    //         <img src={e} />\n    //       </span>\n    //     )\n    //   },\n    // },\n    {\n      title: 'Name',\n      key: 'name',\n      dataIndex: 'name',\n      ...this.getColumnSearchProps('name')\n    }, {\n      title: 'Category',\n      key: 'category',\n      dataIndex: 'category',\n      filters: [{\n        text: 'others',\n        value: 'others'\n      }, {\n        text: 'Electronics',\n        value: 'Electronics'\n      }],\n      onFilter: (value, record) => record.category.indexOf(value) === 0\n    }, {\n      title: 'status',\n      dataIndex: 'status',\n      key: 'status',\n      filters: [{\n        text: 'Listed',\n        value: 'Listed'\n      }, {\n        text: 'Unlisted',\n        value: 'Unlisted'\n      } // { text: 'In progress', value: 'In progress' },\n      ],\n      onFilter: (value, record) => record.status.indexOf(value) === 0,\n      sorter: (a, b) => a.status.length - b.status.length\n    }, // {\n    //   title: 'price',\n    //   dataIndex: 'price',\n    //   defaultSortOrder: 'descend',\n    //   sorter: (a, b) => a.price - b.price,\n    // },\n    {\n      title: 'Action',\n      width: 200,\n      key: 'operation',\n      fixed: 'right',\n\n      render(text, record, index) {\n        return /*#__PURE__*/_jsxDEV(Actions // props={this.props}\n        , {\n          text: text,\n          record: record,\n          index: index,\n          products: products\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 13\n        }, this);\n      }\n\n    }];\n    const {\n      selectedRowKeys,\n      products\n    } = this.state;\n    const hasSelected = selectedRowKeys.length > 0;\n    return /*#__PURE__*/_jsxDEV(\"section\", {\n      children: [/*#__PURE__*/_jsxDEV(Row, {\n        justify: \"space-between\",\n        align: \"middle \",\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          span: 6,\n          style: {\n            textAlign: 'left'\n          },\n          children: [' ', /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"12 Listings\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 225,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          span: 6,\n          children: [' ', /*#__PURE__*/_jsxDEV(Row, {\n            justify: \"end\",\n            align: \"middle \",\n            children: [/*#__PURE__*/_jsxDEV(Col, {\n              span: 16,\n              children: /*#__PURE__*/_jsxDEV(\"h3\", {\n                children: \"Accept custom order\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 231,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 230,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              span: 8,\n              style: {\n                flex: '0'\n              },\n              children: /*#__PURE__*/_jsxDEV(Switch, {\n                defaultChecked: true,\n                onChange: this.onChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 234,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 233,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 229,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        justify: \"end\",\n        align: \"middle\",\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          span: 10,\n          style: {\n            flex: '0'\n          },\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"primary-btn\",\n            style: {\n              backgroundColor: '#3FAC63',\n              width: '200px',\n              padding: '5px 0'\n            },\n            onClick: () => this.props.history.push('/product/create-new', {\n              createNew: true\n            }),\n            children: [' ', \"Create a new listing\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 266,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 265,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 284,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        align: \"middle \",\n        justify: \"center\",\n        className: \"productList-Table\",\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          span: 24,\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              marginLeft: 8\n            },\n            children: hasSelected ? `Selected ${selectedRowKeys.length} items` : ''\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 288,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 287,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          span: 24,\n          children: /*#__PURE__*/_jsxDEV(Table, {\n            rowSelection: {\n              onChange: (selectedRowKeys, selectRows) => {\n                this.setState({\n                  selectedRowKeys\n                });\n              }\n            },\n            columns: columns,\n            dataSource: products,\n            onChange: this.handleChange,\n            rowKey: record => record.key\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 293,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 292,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 286,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 7\n    }, this);\n  }\n\n} // export default ManageServices\n\n\nconst mapStateToProps = ({\n  productOperations\n}) => {\n  const {\n    productList\n  } = productOperations;\n  return {\n    productList\n  };\n};\n\nexport default connect(mapStateToProps, {\n  listProducts\n})(ManageServices);","map":{"version":3,"sources":["C:/Users/kevin/Desktop/workspace/Zenika/front-end-test/src/views/pages/vendorProduct/ManageServices.js"],"names":["React","Component","connect","Table","Popconfirm","Input","Button","Space","Col","Row","Select","Switch","SearchOutlined","Actions","listProducts","Option","Search","ManageServices","constructor","props","state","selectedRowKeys","searchText","searchedColumn","selValue","sortedInfo","filteredInfo","searchInput","products","onSwitchChange","bind","onChange","onSearch","onSelect","handleChange","handleSearch","handleReset","getColumnSearchProps","componentDidMount","componentDidUpdate","prevProps","prevState","productList","setState","checked","value","pagination","filters","sorter","extra","selectedKeys","confirm","dataIndex","clearFilters","filterDropdown","setSelectedKeys","padding","node","e","target","marginBottom","display","width","filterIcon","filtered","color","undefined","onFilter","record","toString","toLowerCase","includes","onFilterDropdownVisibleChange","visible","setTimeout","select","render","columns","title","key","text","category","indexOf","status","a","b","length","fixed","index","hasSelected","textAlign","flex","backgroundColor","history","push","createNew","marginLeft","selectRows","mapStateToProps","productOperations"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport {\n  Table,\n  Popconfirm,\n  Input,\n  Button,\n  Space,\n  Col,\n  Row,\n  Select,\n  Switch,\n} from 'antd'\nimport { SearchOutlined } from '@ant-design/icons'\nimport Actions from '../../common/Actions'\nimport { listProducts } from '../../../state/ducks/products/actions'\nconst { Option } = Select\nconst { Search } = Input\nclass ManageServices extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      selectedRowKeys: [],\n      searchText: '',\n      searchedColumn: '',\n      selValue: '1',\n      sortedInfo: {},\n      filteredInfo: {},\n      searchInput: {},\n      products: [],\n    }\n    this.onSwitchChange = this.onSwitchChange.bind(this)\n    this.onChange = this.onChange.bind(this)\n    this.onSearch = this.onSearch.bind(this)\n    this.onSelect = this.onSelect.bind(this)\n    this.handleChange = this.handleChange.bind(this)\n    this.handleSearch = this.handleSearch.bind(this)\n    this.handleReset = this.handleReset.bind(this)\n    this.getColumnSearchProps = this.getColumnSearchProps.bind(this)\n  }\n  componentDidMount() {\n    this.props.listProducts()\n  }\n  componentDidUpdate(prevProps, prevState) {\n    // console.log('prevProps', prevProps.productList)\n    // console.log('prevProps', this.props.productList)\n    // console.log('prevState', prevState)\n    if (prevProps.productList !== this.props.productList) {\n      this.setState({ products: this.props.productList.products })\n      // console.log('products', this.state.products)\n    }\n  }\n\n  onSwitchChange(checked) {\n    // console.log(`switch to ${checked}`)\n  }\n  onChange(value) {\n    // console.log(value)\n  }\n  onSearch(value) {\n    // console.log('onSearch', value)\n  }\n  onSelect(value) {\n    // console.log('onSelect', value)\n    this.setState({\n      selValue: value,\n    })\n  }\n\n  handleChange(pagination, filters, sorter, extra) {\n    // console.log('params', pagination, filters, sorter, extra)\n  }\n  handleSearch(selectedKeys, confirm, dataIndex) {\n    confirm()\n    this.setState({\n      searchText: selectedKeys[0],\n      searchedColumn: dataIndex,\n    })\n  }\n\n  handleReset(clearFilters) {\n    clearFilters()\n    this.setState({ searchText: '' })\n  }\n\n  getColumnSearchProps(dataIndex) {\n    return {\n      filterDropdown: ({\n        setSelectedKeys,\n        selectedKeys,\n        confirm,\n        clearFilters,\n      }) => (\n        <div style={{ padding: 8 }}>\n          <Input\n            ref={(node) => {\n              this.searchInput = node\n            }}\n            placeholder={`Search ${dataIndex}`}\n            value={selectedKeys[0]}\n            onChange={(e) =>\n              setSelectedKeys(e.target.value ? [e.target.value] : [])\n            }\n            onPressEnter={() =>\n              this.handleSearch(selectedKeys, confirm, dataIndex)\n            }\n            style={{ marginBottom: 8, display: 'block' }}\n          />\n          <Space>\n            <Button\n              type=\"primary\"\n              onClick={() =>\n                this.handleSearch(selectedKeys, confirm, dataIndex)\n              }\n              icon={<SearchOutlined />}\n              size=\"small\"\n              style={{ width: 90 }}\n            >\n              Search\n            </Button>\n            <Button\n              onClick={() => this.handleReset(clearFilters)}\n              size=\"small\"\n              style={{ width: 90 }}\n            >\n              Reset\n            </Button>\n          </Space>\n        </div>\n      ),\n      filterIcon: (filtered) => (\n        <SearchOutlined style={{ color: filtered ? '#1890ff' : undefined }} />\n      ),\n      onFilter: (value, record) =>\n        record[dataIndex]\n          ? record[dataIndex]\n              .toString()\n              .toLowerCase()\n              .includes(value.toLowerCase())\n          : '',\n      onFilterDropdownVisibleChange: (visible) => {\n        if (visible) {\n          setTimeout(() => this.searchInput.select(), 100)\n        }\n      },\n    }\n  }\n\n  render() {\n    const columns = [\n      // {\n      //   title: 'Image',\n      //   width: 100,\n      //   dataIndex: 'image',\n      //   key: 'image',\n      //   render(e) {\n      //     return (\n      //       <span className=\"Pm-list-img\">\n      //         <img src={e} />\n      //       </span>\n      //     )\n      //   },\n      // },\n      {\n        title: 'Name',\n        key: 'name',\n        dataIndex: 'name',\n        ...this.getColumnSearchProps('name'),\n      },\n      {\n        title: 'Category',\n        key: 'category',\n        dataIndex: 'category',\n        filters: [\n          { text: 'others', value: 'others' },\n          { text: 'Electronics', value: 'Electronics' },\n        ],\n        onFilter: (value, record) => record.category.indexOf(value) === 0,\n      },\n      {\n        title: 'status',\n        dataIndex: 'status',\n        key: 'status',\n        filters: [\n          { text: 'Listed', value: 'Listed' },\n          { text: 'Unlisted', value: 'Unlisted' },\n          // { text: 'In progress', value: 'In progress' },\n        ],\n        onFilter: (value, record) => record.status.indexOf(value) === 0,\n        sorter: (a, b) => a.status.length - b.status.length,\n      },\n\n      // {\n      //   title: 'price',\n      //   dataIndex: 'price',\n      //   defaultSortOrder: 'descend',\n      //   sorter: (a, b) => a.price - b.price,\n      // },\n      {\n        title: 'Action',\n        width: 200,\n        key: 'operation',\n        fixed: 'right',\n        render(text, record, index) {\n          return (\n            <Actions\n              // props={this.props}\n              text={text}\n              record={record}\n              index={index}\n              products={products}\n            />\n          )\n        },\n      },\n    ]\n\n    const { selectedRowKeys, products } = this.state\n    const hasSelected = selectedRowKeys.length > 0\n    return (\n      <section>\n        <Row justify=\"space-between\" align=\"middle \">\n          <Col span={6} style={{ textAlign: 'left' }}>\n            {' '}\n            <h3>12 Listings</h3>\n          </Col>\n          <Col span={6}>\n            {' '}\n            <Row justify=\"end\" align=\"middle \">\n              <Col span={16}>\n                <h3>Accept custom order</h3>\n              </Col>\n              <Col span={8} style={{ flex: '0' }}>\n                <Switch defaultChecked onChange={this.onChange} />\n              </Col>\n            </Row>\n          </Col>\n        </Row>\n        <br />\n        <Row justify=\"end\" align=\"middle\">\n          {/* <Col span={20}>\n            <Row justify=\"start\" align=\"middle \">\n              <Col span={8}>\n                {' '}\n                <Search\n                  placeholder=\"input search text\"\n                  onSearch={this.onSearch}\n                  enterButton\n                  size=\"large\"\n                />\n              </Col>\n              <Col span={8}>\n                <Select\n                  defaultValue=\"1\"\n                  size=\"large\"\n                  style={{ width: 200 }}\n                  onChange={this.onSelect}\n                >\n                  <Option value=\"1\">Search by name</Option>\n                  <Option value=\"2\">Search by description</Option>\n                </Select>\n              </Col>\n            </Row>\n          </Col> */}\n          <Col span={10} style={{ flex: '0' }}>\n            <button\n              className=\"primary-btn\"\n              style={{\n                backgroundColor: '#3FAC63',\n                width: '200px',\n                padding: '5px 0',\n              }}\n              onClick={() =>\n                this.props.history.push('/product/create-new', {\n                  createNew: true,\n                })\n              }\n            >\n              {' '}\n              Create a new listing\n            </button>\n          </Col>\n        </Row>\n        <br />\n\n        <Row align=\"middle \" justify=\"center\" className=\"productList-Table\">\n          <Col span={24}>\n            <span style={{ marginLeft: 8 }}>\n              {hasSelected ? `Selected ${selectedRowKeys.length} items` : ''}\n            </span>\n          </Col>\n          <Col span={24}>\n            <Table\n              rowSelection={{\n                onChange: (selectedRowKeys, selectRows) => {\n                  this.setState({ selectedRowKeys })\n                },\n              }}\n              columns={columns}\n              dataSource={products}\n              onChange={this.handleChange}\n              rowKey={(record) => record.key}\n            />\n          </Col>\n        </Row>\n      </section>\n    )\n  }\n}\n// export default ManageServices\n\nconst mapStateToProps = ({ productOperations }) => {\n  const { productList } = productOperations\n  return { productList }\n}\nexport default connect(mapStateToProps, {\n  listProducts,\n})(ManageServices)\n"]},"metadata":{},"sourceType":"module"}