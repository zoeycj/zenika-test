{"ast":null,"code":"/* eslint-disable no-debugger */\nimport axiosInstance from '../../api';\nimport axios from 'axios';\nimport * as types from './types';\nexport const listProducts = () => async dispatch => {\n  try {\n    dispatch({\n      type: types.PRODUCT_LIST_REQUEST\n    });\n    const response = await axios.get(`/products/find-all`);\n    dispatch({\n      type: types.PRODUCT_LIST_SUCCESS,\n      payload: response.data\n    });\n  } catch (error) {\n    dispatch({\n      type: types.PRODUCT_LIST_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const listProductDetails = id => async dispatch => {\n  try {\n    dispatch({\n      type: types.PRODUCT_DETAILS_REQUEST\n    });\n    const {\n      data\n    } = await axios.get(`/products/${id}`);\n    dispatch({\n      type: types.PRODUCT_DETAILS_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: types.PRODUCT_DETAILS_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n}; // create new product\n\nexport const productCreate = payload => async dispatch => {\n  try {\n    dispatch({\n      type: types.PRODUCT_CREATE_REQUEST\n    });\n    const response = await axios.post(`/products/create`, payload);\n    dispatch({\n      type: types.PRODUCT_CREATE_SUCCESS,\n      payload: response.data\n    });\n  } catch (error) {\n    dispatch({\n      type: types.PRODUCT_CREATE_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const productUpdate = (id, payload) => async dispatch => {\n  try {\n    dispatch({\n      type: types.PRODUCT_UPDATE_REQUEST\n    });\n    const response = await axios.patch(`/products/update/${id}`, payload);\n    dispatch({\n      type: types.PRODUCT_UPDATE_SUCCESS,\n      payload: response.data\n    });\n  } catch (error) {\n    dispatch({\n      type: types.PRODUCT_UPDATE_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const productUploadImage = (id, formData) => async dispatch => {\n  try {\n    dispatch({\n      type: types.UPLOAD_IMAGE_REQUEST\n    });\n    const response = await axiosInstance().post(`/products/upload-file/${id}`, formData);\n    dispatch({\n      type: types.UPLOAD_IMAGE_SUCCESS,\n      payload: response.data\n    });\n  } catch (error) {\n    dispatch({\n      type: types.UPLOAD_IMAGE_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};","map":{"version":3,"sources":["C:/Users/kevin/Desktop/workspace/Zenika/front-end-test/src/state/ducks/employee/actions.js"],"names":["axiosInstance","axios","types","listProducts","dispatch","type","PRODUCT_LIST_REQUEST","response","get","PRODUCT_LIST_SUCCESS","payload","data","error","PRODUCT_LIST_FAIL","message","listProductDetails","id","PRODUCT_DETAILS_REQUEST","PRODUCT_DETAILS_SUCCESS","PRODUCT_DETAILS_FAIL","productCreate","PRODUCT_CREATE_REQUEST","post","PRODUCT_CREATE_SUCCESS","PRODUCT_CREATE_FAIL","productUpdate","PRODUCT_UPDATE_REQUEST","patch","PRODUCT_UPDATE_SUCCESS","PRODUCT_UPDATE_FAIL","productUploadImage","formData","UPLOAD_IMAGE_REQUEST","UPLOAD_IMAGE_SUCCESS","UPLOAD_IMAGE_FAIL"],"mappings":"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","sourcesContent":["/* eslint-disable no-debugger */\nimport axiosInstance from '../../api'\nimport axios from 'axios'\n\nimport * as types from './types'\n\nexport const listProducts = () => async (dispatch) => {\n  try {\n    dispatch({ type: types.PRODUCT_LIST_REQUEST })\n    const response = await axios.get(`/products/find-all`)\n\n    dispatch({\n      type: types.PRODUCT_LIST_SUCCESS,\n      payload: response.data,\n    })\n  } catch (error) {\n    dispatch({\n      type: types.PRODUCT_LIST_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    })\n  }\n}\n\nexport const listProductDetails = (id) => async (dispatch) => {\n  try {\n    dispatch({ type: types.PRODUCT_DETAILS_REQUEST })\n\n    const { data } = await axios.get(`/products/${id}`)\n\n    dispatch({\n      type: types.PRODUCT_DETAILS_SUCCESS,\n      payload: data,\n    })\n  } catch (error) {\n    dispatch({\n      type: types.PRODUCT_DETAILS_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    })\n  }\n}\n\n// create new product\nexport const productCreate = (payload) => async (dispatch) => {\n  try {\n    dispatch({ type: types.PRODUCT_CREATE_REQUEST })\n\n    const response = await axios.post(`/products/create`, payload)\n\n    dispatch({\n      type: types.PRODUCT_CREATE_SUCCESS,\n      payload: response.data,\n    })\n  } catch (error) {\n    dispatch({\n      type: types.PRODUCT_CREATE_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    })\n  }\n}\n\nexport const productUpdate = (id, payload) => async (dispatch) => {\n  try {\n    dispatch({ type: types.PRODUCT_UPDATE_REQUEST })\n    const response = await axios.patch(`/products/update/${id}`, payload)\n    dispatch({\n      type: types.PRODUCT_UPDATE_SUCCESS,\n      payload: response.data,\n    })\n  } catch (error) {\n    dispatch({\n      type: types.PRODUCT_UPDATE_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    })\n  }\n}\n\nexport const productUploadImage = (id, formData) => async (dispatch) => {\n  try {\n    dispatch({ type: types.UPLOAD_IMAGE_REQUEST })\n\n    const response = await axiosInstance().post(\n      `/products/upload-file/${id}`,\n      formData\n    )\n\n    dispatch({\n      type: types.UPLOAD_IMAGE_SUCCESS,\n      payload: response.data,\n    })\n  } catch (error) {\n    dispatch({\n      type: types.UPLOAD_IMAGE_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    })\n  }\n}\n"]},"metadata":{},"sourceType":"module"}