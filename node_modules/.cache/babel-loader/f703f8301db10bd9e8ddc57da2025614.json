{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kevin\\\\Desktop\\\\workspace\\\\Zenika\\\\demo-web-main\\\\src\\\\views\\\\utils\\\\hoc\\\\ProtectedRoute.js\";\nimport React from 'react';\nimport { useSelector } from 'react-redux';\nimport { Route, Redirect } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ProtectedRoute = ({\n  component: Component,\n  ...rest\n}) => {\n  // if redux store userLogin has data, it mean isAuthentificated\n  // else isAuthentificated = false\n  const isAuthentificated = useSelector(state => state.userOperations.userLogin.userInfo);\n  return /*#__PURE__*/_jsxDEV(Route, { ...rest,\n    render: props => isAuthentificated ? /*#__PURE__*/_jsxDEV(Component, { ...props\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 11\n    }, this) : /*#__PURE__*/_jsxDEV(Redirect, {\n      to: {\n        pathname: '/sign_in',\n        state: {\n          from: props.location\n        }\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n};\n\nexport default ProtectedRoute;","map":{"version":3,"sources":["C:/Users/kevin/Desktop/workspace/Zenika/demo-web-main/src/views/utils/hoc/ProtectedRoute.js"],"names":["React","useSelector","Route","Redirect","ProtectedRoute","component","Component","rest","isAuthentificated","state","userOperations","userLogin","userInfo","props","pathname","from","location"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,KAAT,EAAgBC,QAAhB,QAAgC,kBAAhC;;;AAEA,MAAMC,cAAc,GAAG,CAAC;AAAEC,EAAAA,SAAS,EAAEC,SAAb;AAAwB,KAAGC;AAA3B,CAAD,KAAuC;AAC5D;AACA;AAEA,QAAMC,iBAAiB,GAAGP,WAAW,CAClCQ,KAAD,IAAWA,KAAK,CAACC,cAAN,CAAqBC,SAArB,CAA+BC,QADP,CAArC;AAIA,sBACE,QAAC,KAAD,OACML,IADN;AAEE,IAAA,MAAM,EAAGM,KAAD,IACNL,iBAAiB,gBACf,QAAC,SAAD,OAAeK;AAAf;AAAA;AAAA;AAAA;AAAA,YADe,gBAGf,QAAC,QAAD;AACE,MAAA,EAAE,EAAE;AACFC,QAAAA,QAAQ,EAAE,UADR;AAEFL,QAAAA,KAAK,EAAE;AAAEM,UAAAA,IAAI,EAAEF,KAAK,CAACG;AAAd;AAFL;AADN;AAAA;AAAA;AAAA;AAAA;AANN;AAAA;AAAA;AAAA;AAAA,UADF;AAiBD,CAzBD;;AA2BA,eAAeZ,cAAf","sourcesContent":["import React from 'react'\nimport { useSelector } from 'react-redux'\nimport { Route, Redirect } from 'react-router-dom'\n\nconst ProtectedRoute = ({ component: Component, ...rest }) => {\n  // if redux store userLogin has data, it mean isAuthentificated\n  // else isAuthentificated = false\n\n  const isAuthentificated = useSelector(\n    (state) => state.userOperations.userLogin.userInfo\n  )\n\n  return (\n    <Route\n      {...rest}\n      render={(props) =>\n        isAuthentificated ? (\n          <Component {...props} />\n        ) : (\n          <Redirect\n            to={{\n              pathname: '/sign_in',\n              state: { from: props.location },\n            }}\n          />\n        )\n      }\n    />\n  )\n}\n\nexport default ProtectedRoute\n"]},"metadata":{},"sourceType":"module"}