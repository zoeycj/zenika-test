{"ast":null,"code":"/* eslint-disable no-debugger */\nimport * as types from './types';\nimport { message } from 'antd';\nexport const employeeListReducer = (state = {}, action) => {\n  switch (action.type) {\n    case types.GET_ALL_EMPLOYEE_REQUEST:\n      return {\n        loading: true\n      };\n\n    case types.GET_ALL_EMPLOYEE_SUCCESS:\n      return {\n        loading: false,\n        data: action.payload.data,\n        statusCode: action.payload.status\n      };\n\n    case types.GET_ALL_EMPLOYEE_FAIL:\n      return {\n        loading: false,\n        error: action.payload\n      };\n\n    default:\n      return state;\n  }\n};\nexport const employeeAddReducer = (state = {}, action) => {\n  switch (action.type) {\n    case types.EMPLOYEE_ADD_REQUEST:\n      return {\n        loading: true\n      };\n\n    case types.EMPLOYEE_ADD_SUCCESS:\n      message.success('Create new employee success!');\n      return {\n        loading: false,\n        data: action.payload\n      };\n\n    case types.EMPLOYEE_ADD_FAIL:\n      message.error(action.payload);\n      return {\n        loading: false,\n        error: action.payload\n      };\n\n    default:\n      return state;\n  }\n};\nexport const employeeEditReducer = (state = {}, action) => {\n  switch (action.type) {\n    case types.EMPLOYEE_EDIT_REQUEST:\n      return {\n        loading: true\n      };\n\n    case types.EMPLOYEE_EDIT_SUCCESS:\n      message.success('Update employee success!');\n      return {\n        loading: false,\n        data: action.payload\n      };\n\n    case types.EMPLOYEE_EDIT_FAIL:\n      message.error(action.payload);\n      return {\n        loading: false,\n        error: action.payload\n      };\n\n    default:\n      return state;\n  }\n};\nexport const employeeDeleteReducer = (state = {}, action) => {\n  switch (action.type) {\n    case types.EMPLOYEE_DELETE_REQUEST:\n      debugger;\n      return {\n        loading: true\n      };\n\n    case types.EMPLOYEE_DELETE_SUCCESS:\n      debugger;\n      message.success('Delete employee success!');\n      return {\n        loading: false,\n        data: action.payload\n      };\n\n    case types.EMPLOYEE_DELETE_FAIL:\n      debugger;\n      message.error(action.payload);\n      return {\n        loading: false,\n        error: action.payload\n      };\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["C:/Users/kevin/Desktop/workspace/Zenika/front-end-test/src/state/ducks/employee/reducers.js"],"names":["types","message","employeeListReducer","state","action","type","GET_ALL_EMPLOYEE_REQUEST","loading","GET_ALL_EMPLOYEE_SUCCESS","data","payload","statusCode","status","GET_ALL_EMPLOYEE_FAIL","error","employeeAddReducer","EMPLOYEE_ADD_REQUEST","EMPLOYEE_ADD_SUCCESS","success","EMPLOYEE_ADD_FAIL","employeeEditReducer","EMPLOYEE_EDIT_REQUEST","EMPLOYEE_EDIT_SUCCESS","EMPLOYEE_EDIT_FAIL","employeeDeleteReducer","EMPLOYEE_DELETE_REQUEST","EMPLOYEE_DELETE_SUCCESS","EMPLOYEE_DELETE_FAIL"],"mappings":"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","sourcesContent":["/* eslint-disable no-debugger */\nimport * as types from './types'\nimport { message } from 'antd'\nexport const employeeListReducer = (state = {}, action) => {\n  switch (action.type) {\n    case types.GET_ALL_EMPLOYEE_REQUEST:\n      return { loading: true }\n    case types.GET_ALL_EMPLOYEE_SUCCESS:\n      return {\n        loading: false,\n        data: action.payload.data,\n        statusCode: action.payload.status,\n      }\n    case types.GET_ALL_EMPLOYEE_FAIL:\n      return { loading: false, error: action.payload }\n    default:\n      return state\n  }\n}\n\nexport const employeeAddReducer = (state = {}, action) => {\n  switch (action.type) {\n    case types.EMPLOYEE_ADD_REQUEST:\n      return { loading: true }\n    case types.EMPLOYEE_ADD_SUCCESS:\n      message.success('Create new employee success!')\n      return { loading: false, data: action.payload }\n    case types.EMPLOYEE_ADD_FAIL:\n      message.error(action.payload)\n      return { loading: false, error: action.payload }\n    default:\n      return state\n  }\n}\n\nexport const employeeEditReducer = (state = {}, action) => {\n  switch (action.type) {\n    case types.EMPLOYEE_EDIT_REQUEST:\n      return { loading: true }\n    case types.EMPLOYEE_EDIT_SUCCESS:\n      message.success('Update employee success!')\n      return { loading: false, data: action.payload }\n    case types.EMPLOYEE_EDIT_FAIL:\n      message.error(action.payload)\n      return { loading: false, error: action.payload }\n    default:\n      return state\n  }\n}\nexport const employeeDeleteReducer = (state = {}, action) => {\n  switch (action.type) {\n    case types.EMPLOYEE_DELETE_REQUEST:\n      debugger\n      return { loading: true }\n    case types.EMPLOYEE_DELETE_SUCCESS:\n      debugger\n      message.success('Delete employee success!')\n      return { loading: false, data: action.payload }\n    case types.EMPLOYEE_DELETE_FAIL:\n      debugger\n      message.error(action.payload)\n      return { loading: false, error: action.payload }\n    default:\n      return state\n  }\n}\n"]},"metadata":{},"sourceType":"module"}