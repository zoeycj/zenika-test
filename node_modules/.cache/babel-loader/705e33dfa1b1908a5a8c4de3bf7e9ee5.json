{"ast":null,"code":"import axios from 'axios';\nimport axiosInstance from '../../api';\nimport { GET_ALL_REQUEST, GET_ALL_SUCCESS, GET_ALL_FAIL, EMPLOYEE_ADD_REQUEST, EMPLOYEE_ADD_SUCCESS, EMPLOYEE_ADD_FAIL, EMPLOYEE_EDIT_REQUEST, EMPLOYEE_EDIT_SUCCESS, SEMPLOYEE_EDIT_FAIL, EMPLOYEE_DELETE_REQUEST, EMPLOYEE_DELETE_SUCCESS, SEMPLOYEE_DELETE_FAIL } from './types'; // # LOGOUT\n\nexport const logout = history => async dispatch => {\n  try {\n    dispatch({\n      type: LOG_OUT_REQUEST\n    });\n    const response = await axiosInstance().post(`/auth/logout`);\n    dispatch({\n      type: LOG_OUT_SUCCESS,\n      payload: response.data\n    });\n    localStorage.removeItem('userInfo');\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n    dispatch({\n      type: LOG_OUT_FAIL,\n      payload: message\n    });\n  }\n}; // # LOGIN\n\nexport const login = payload => async dispatch => {\n  try {\n    dispatch({\n      type: LOG_IN_REQUEST\n    });\n    const response = await axiosInstance().post(`/auth/login`, payload);\n    dispatch({\n      type: LOG_IN_SUCCESS,\n      payload: response.data\n    });\n\n    if (response) {\n      localStorage.setItem('userInfo', JSON.stringify(response.data));\n    } // Set user data to localStorage\n\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n    dispatch({\n      type: LOG_IN_FAIL,\n      payload: message\n    });\n  }\n}; // sign up\n\nexport const signUp = payload => async dispatch => {\n  try {\n    dispatch({\n      type: SIGN_UP_REQUEST\n    });\n    const response = await axiosInstance().post(`/user/create`, payload);\n    dispatch({\n      type: SIGN_UP_SUCCESS,\n      payload: response.data\n    });\n\n    if (response) {\n      localStorage.setItem('userInfo', JSON.stringify(response.data));\n    }\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n    dispatch({\n      type: SIGN_UP_FAIL,\n      payload: message\n    });\n  }\n}; // Refresh Token\n\nexport const refreshToken = () => async dispatch => {\n  try {\n    dispatch({\n      type: LOG_IN_REQUEST\n    });\n    const response = await axiosInstance().get(`/auth/refresh`);\n\n    if (response) {\n      localStorage.setItem('userInfo', JSON.stringify(response.data));\n    }\n\n    dispatch({\n      type: LOG_IN_SUCCESS,\n      payload: response.data\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n    dispatch({\n      type: LOG_IN_FAIL,\n      payload: message\n    });\n  }\n}; // # PERSONAL INFO\n\nexport const userPersonalInfo = history => async dispatch => {\n  try {\n    dispatch({\n      type: USER_PERSONAL_INFO_REQUEST\n    });\n    const response = await axiosInstance().get(`/user/profile`);\n    dispatch({\n      type: USER_PERSONAL_INFO_SUCCESS,\n      payload: response.data\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n    dispatch({\n      type: USER_PERSONAL_INFO_FAIL,\n      payload: message\n    });\n  }\n};","map":{"version":3,"sources":["C:/Users/kevin/Desktop/workspace/Zenika/front-end-test/src/state/ducks/employee/actions.js"],"names":["axios","axiosInstance","GET_ALL_REQUEST","GET_ALL_SUCCESS","GET_ALL_FAIL","EMPLOYEE_ADD_REQUEST","EMPLOYEE_ADD_SUCCESS","EMPLOYEE_ADD_FAIL","EMPLOYEE_EDIT_REQUEST","EMPLOYEE_EDIT_SUCCESS","SEMPLOYEE_EDIT_FAIL","EMPLOYEE_DELETE_REQUEST","EMPLOYEE_DELETE_SUCCESS","SEMPLOYEE_DELETE_FAIL","logout","history","dispatch","type","LOG_OUT_REQUEST","response","post","LOG_OUT_SUCCESS","payload","data","localStorage","removeItem","error","message","LOG_OUT_FAIL","login","LOG_IN_REQUEST","LOG_IN_SUCCESS","setItem","JSON","stringify","LOG_IN_FAIL","signUp","SIGN_UP_REQUEST","SIGN_UP_SUCCESS","SIGN_UP_FAIL","refreshToken","get","userPersonalInfo","USER_PERSONAL_INFO_REQUEST","USER_PERSONAL_INFO_SUCCESS","USER_PERSONAL_INFO_FAIL"],"mappings":"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","sourcesContent":["import axios from 'axios'\nimport axiosInstance from '../../api'\n\nimport {\n  GET_ALL_REQUEST,\n  GET_ALL_SUCCESS,\n  GET_ALL_FAIL,\n  EMPLOYEE_ADD_REQUEST,\n  EMPLOYEE_ADD_SUCCESS,\n  EMPLOYEE_ADD_FAIL,\n  EMPLOYEE_EDIT_REQUEST,\n  EMPLOYEE_EDIT_SUCCESS,\n  SEMPLOYEE_EDIT_FAIL,\n  EMPLOYEE_DELETE_REQUEST,\n  EMPLOYEE_DELETE_SUCCESS,\n  SEMPLOYEE_DELETE_FAIL,\n} from './types'\n\n// # LOGOUT\nexport const logout = (history) => async (dispatch) => {\n  try {\n    dispatch({ type: LOG_OUT_REQUEST })\n    const response = await axiosInstance().post(`/auth/logout`)\n\n    dispatch({\n      type: LOG_OUT_SUCCESS,\n      payload: response.data,\n    })\n\n    localStorage.removeItem('userInfo')\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message\n\n    dispatch({\n      type: LOG_OUT_FAIL,\n      payload: message,\n    })\n  }\n}\n\n// # LOGIN\nexport const login = (payload) => async (dispatch) => {\n  try {\n    dispatch({ type: LOG_IN_REQUEST })\n    const response = await axiosInstance().post(`/auth/login`, payload)\n\n    dispatch({\n      type: LOG_IN_SUCCESS,\n      payload: response.data,\n    })\n\n    if (response) {\n      localStorage.setItem('userInfo', JSON.stringify(response.data))\n    }\n\n    // Set user data to localStorage\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message\n\n    dispatch({\n      type: LOG_IN_FAIL,\n      payload: message,\n    })\n  }\n}\n// sign up\nexport const signUp = (payload) => async (dispatch) => {\n  try {\n    dispatch({ type: SIGN_UP_REQUEST })\n    const response = await axiosInstance().post(`/user/create`, payload)\n\n    dispatch({\n      type: SIGN_UP_SUCCESS,\n      payload: response.data,\n    })\n    if (response) {\n      localStorage.setItem('userInfo', JSON.stringify(response.data))\n    }\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message\n    dispatch({\n      type: SIGN_UP_FAIL,\n      payload: message,\n    })\n  }\n}\n\n// Refresh Token\nexport const refreshToken = () => async (dispatch) => {\n  try {\n    dispatch({ type: LOG_IN_REQUEST })\n    const response = await axiosInstance().get(`/auth/refresh`)\n\n    if (response) {\n      localStorage.setItem('userInfo', JSON.stringify(response.data))\n    }\n\n    dispatch({\n      type: LOG_IN_SUCCESS,\n      payload: response.data,\n    })\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message\n\n    dispatch({\n      type: LOG_IN_FAIL,\n      payload: message,\n    })\n  }\n}\n\n// # PERSONAL INFO\nexport const userPersonalInfo = (history) => async (dispatch) => {\n  try {\n    dispatch({ type: USER_PERSONAL_INFO_REQUEST })\n    const response = await axiosInstance().get(`/user/profile`)\n\n    dispatch({\n      type: USER_PERSONAL_INFO_SUCCESS,\n      payload: response.data,\n    })\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message\n\n    dispatch({\n      type: USER_PERSONAL_INFO_FAIL,\n      payload: message,\n    })\n  }\n}\n"]},"metadata":{},"sourceType":"module"}