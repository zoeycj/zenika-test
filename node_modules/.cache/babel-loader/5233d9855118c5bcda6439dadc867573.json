{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kevin\\\\Desktop\\\\workspace\\\\Zenika\\\\front-end-test\\\\src\\\\views\\\\pages\\\\employee\\\\details\\\\index.js\";\n\n/* eslint-disable no-debugger */\nimport React, { useEffect, useState } from 'react';\nimport { Card, Row, Form, Input, InputNumber, Cascader, Select, Col, Checkbox, Button, AutoComplete } from 'antd';\nimport { BackwardOutlined } from '@ant-design/icons';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst {\n  Option\n} = Select;\n\nconst EmployeeDetail = props => {\n  const [employeeId, setEmployeeId] = useState(null);\n  const formItemLayout = {\n    labelCol: {\n      xs: {\n        span: 24\n      },\n      lg: {\n        span: 4\n      }\n    },\n    wrapperCol: {\n      xs: {\n        span: 24\n      },\n      lg: {\n        span: 10\n      }\n    }\n  };\n  const [form] = Form.useForm();\n  useEffect(() => {\n    const style = props.location.state.style;\n    const id = props.location.state._id;\n\n    if (style === 'edit') {\n      setEmployeeId(id);\n    }\n  }, [props]);\n\n  const onBack = () => {\n    props.history.goBack();\n  };\n\n  const onFinish = values => {\n    console.log('Received values of form: ', values);\n  };\n\n  const title = /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Row, {\n      children: [/*#__PURE__*/_jsxDEV(BackwardOutlined, {\n        onClick: onBack\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Back to list page\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 47\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"EmployeeDetail\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      title: title,\n      ...formItemLayout,\n      form: form,\n      children: /*#__PURE__*/_jsxDEV(Form, { ...formItemLayout,\n        form: form,\n        name: \"register\",\n        onFinish: onFinish,\n        initialValues: {\n          residence: ['zhejiang', 'hangzhou', 'xihu'],\n          prefix: '86'\n        },\n        scrollToFirstError: true,\n        children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n          name: \"email\",\n          label: \"E-mail\",\n          rules: [{\n            type: 'email',\n            message: 'The input is not valid E-mail!'\n          }, {\n            required: true,\n            message: 'Please input your E-mail!'\n          }],\n          children: /*#__PURE__*/_jsxDEV(Input, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n          name: \"password\",\n          label: \"Password\",\n          rules: [{\n            required: true,\n            message: 'Please input your password!'\n          }],\n          hasFeedback: true,\n          children: /*#__PURE__*/_jsxDEV(Input.Password, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n          name: \"confirm\",\n          label: \"Confirm Password\",\n          dependencies: ['password'],\n          hasFeedback: true,\n          rules: [{\n            required: true,\n            message: 'Please confirm your password!'\n          }, ({\n            getFieldValue\n          }) => ({\n            validator(_, value) {\n              if (!value || getFieldValue('password') === value) {\n                return Promise.resolve();\n              }\n\n              return Promise.reject(new Error('The two passwords that you entered do not match!'));\n            }\n\n          })],\n          children: /*#__PURE__*/_jsxDEV(Input.Password, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n          name: \"nickname\",\n          label: \"Nickname\",\n          tooltip: \"What do you want others to call you?\",\n          rules: [{\n            required: true,\n            message: 'Please input your nickname!',\n            whitespace: true\n          }],\n          children: /*#__PURE__*/_jsxDEV(Input, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n          name: \"residence\",\n          label: \"Habitual Residence\",\n          rules: [{\n            type: 'array',\n            required: true,\n            message: 'Please select your habitual residence!'\n          }],\n          children: /*#__PURE__*/_jsxDEV(Cascader, {\n            options: residences\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n          name: \"phone\",\n          label: \"Phone Number\",\n          rules: [{\n            required: true,\n            message: 'Please input your phone number!'\n          }],\n          children: /*#__PURE__*/_jsxDEV(Input, {\n            addonBefore: prefixSelector,\n            style: {\n              width: '100%'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n          name: \"donation\",\n          label: \"Donation\",\n          rules: [{\n            required: true,\n            message: 'Please input donation amount!'\n          }],\n          children: /*#__PURE__*/_jsxDEV(InputNumber, {\n            addonAfter: suffixSelector,\n            style: {\n              width: '100%'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n          name: \"website\",\n          label: \"Website\",\n          rules: [{\n            required: true,\n            message: 'Please input website!'\n          }],\n          children: /*#__PURE__*/_jsxDEV(AutoComplete, {\n            options: websiteOptions,\n            onChange: onWebsiteChange,\n            placeholder: \"website\",\n            children: /*#__PURE__*/_jsxDEV(Input, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 186,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n          name: \"gender\",\n          label: \"Gender\",\n          rules: [{\n            required: true,\n            message: 'Please select gender!'\n          }],\n          children: /*#__PURE__*/_jsxDEV(Select, {\n            placeholder: \"select your gender\",\n            children: [/*#__PURE__*/_jsxDEV(Option, {\n              value: \"male\",\n              children: \"Male\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 196,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Option, {\n              value: \"female\",\n              children: \"Female\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 197,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Option, {\n              value: \"other\",\n              children: \"Other\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 198,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n          label: \"Captcha\",\n          extra: \"We must make sure that your are a human.\",\n          children: /*#__PURE__*/_jsxDEV(Row, {\n            gutter: 8,\n            children: [/*#__PURE__*/_jsxDEV(Col, {\n              span: 12,\n              children: /*#__PURE__*/_jsxDEV(Form.Item, {\n                name: \"captcha\",\n                noStyle: true,\n                rules: [{\n                  required: true,\n                  message: 'Please input the captcha you got!'\n                }],\n                children: /*#__PURE__*/_jsxDEV(Input, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 218,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 208,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 207,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              span: 12,\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                children: \"Get captcha\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 222,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 221,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n          name: \"agreement\",\n          valuePropName: \"checked\",\n          rules: [{\n            validator: (_, value) => value ? Promise.resolve() : Promise.reject(new Error('Should accept agreement'))\n          }],\n          ...tailFormItemLayout,\n          children: /*#__PURE__*/_jsxDEV(Checkbox, {\n            children: [\"I have read the \", /*#__PURE__*/_jsxDEV(\"a\", {\n              href: \"\",\n              children: \"agreement\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 241,\n              columnNumber: 31\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 240,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, { ...tailFormItemLayout,\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            type: \"primary\",\n            htmlType: \"submit\",\n            children: \"Register\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 245,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\nexport default EmployeeDetail;","map":{"version":3,"sources":["C:/Users/kevin/Desktop/workspace/Zenika/front-end-test/src/views/pages/employee/details/index.js"],"names":["React","useEffect","useState","Card","Row","Form","Input","InputNumber","Cascader","Select","Col","Checkbox","Button","AutoComplete","BackwardOutlined","Option","EmployeeDetail","props","employeeId","setEmployeeId","formItemLayout","labelCol","xs","span","lg","wrapperCol","form","useForm","style","location","state","id","_id","onBack","history","goBack","onFinish","values","console","log","title","residence","prefix","type","message","required","getFieldValue","validator","_","value","Promise","resolve","reject","Error","whitespace","residences","prefixSelector","width","suffixSelector","websiteOptions","onWebsiteChange","tailFormItemLayout"],"mappings":";;AAAA;AACA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SACEC,IADF,EAEEC,GAFF,EAGEC,IAHF,EAIEC,KAJF,EAKEC,WALF,EAMEC,QANF,EAOEC,MAPF,EAQEC,GARF,EASEC,QATF,EAUEC,MAVF,EAWEC,YAXF,QAYO,MAZP;AAaA,SAASC,gBAAT,QAAiC,mBAAjC;;;AACA,MAAM;AAAEC,EAAAA;AAAF,IAAaN,MAAnB;;AACA,MAAMO,cAAc,GAAIC,KAAD,IAAW;AAChC,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BjB,QAAQ,CAAC,IAAD,CAA5C;AACA,QAAMkB,cAAc,GAAG;AACrBC,IAAAA,QAAQ,EAAE;AACRC,MAAAA,EAAE,EAAE;AAAEC,QAAAA,IAAI,EAAE;AAAR,OADI;AAERC,MAAAA,EAAE,EAAE;AAAED,QAAAA,IAAI,EAAE;AAAR;AAFI,KADW;AAKrBE,IAAAA,UAAU,EAAE;AACVH,MAAAA,EAAE,EAAE;AAAEC,QAAAA,IAAI,EAAE;AAAR,OADM;AAEVC,MAAAA,EAAE,EAAE;AAAED,QAAAA,IAAI,EAAE;AAAR;AAFM;AALS,GAAvB;AAUA,QAAM,CAACG,IAAD,IAASrB,IAAI,CAACsB,OAAL,EAAf;AACA1B,EAAAA,SAAS,CAAC,MAAM;AACd,UAAM2B,KAAK,GAAGX,KAAK,CAACY,QAAN,CAAeC,KAAf,CAAqBF,KAAnC;AACA,UAAMG,EAAE,GAAGd,KAAK,CAACY,QAAN,CAAeC,KAAf,CAAqBE,GAAhC;;AACA,QAAIJ,KAAK,KAAK,MAAd,EAAsB;AACpBT,MAAAA,aAAa,CAACY,EAAD,CAAb;AACD;AACF,GANQ,EAMN,CAACd,KAAD,CANM,CAAT;;AAOA,QAAMgB,MAAM,GAAG,MAAM;AACnBhB,IAAAA,KAAK,CAACiB,OAAN,CAAcC,MAAd;AACD,GAFD;;AAGA,QAAMC,QAAQ,GAAIC,MAAD,IAAiB;AAChCC,IAAAA,OAAO,CAACC,GAAR,CAAY,2BAAZ,EAAyCF,MAAzC;AACD,GAFD;;AAGA,QAAMG,KAAK,gBACT;AAAA,2BACE,QAAC,GAAD;AAAA,8BACE,QAAC,gBAAD;AAAkB,QAAA,OAAO,EAAEP;AAA3B;AAAA;AAAA;AAAA;AAAA,cADF,oBACwC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADxC;AAAA;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;;AAOA,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,IAAD;AAAM,MAAA,KAAK,EAAEO,KAAb;AAAA,SAAwBpB,cAAxB;AAAwC,MAAA,IAAI,EAAEM,IAA9C;AAAA,6BACE,QAAC,IAAD,OACMN,cADN;AAEE,QAAA,IAAI,EAAEM,IAFR;AAGE,QAAA,IAAI,EAAC,UAHP;AAIE,QAAA,QAAQ,EAAEU,QAJZ;AAKE,QAAA,aAAa,EAAE;AACbK,UAAAA,SAAS,EAAE,CAAC,UAAD,EAAa,UAAb,EAAyB,MAAzB,CADE;AAEbC,UAAAA,MAAM,EAAE;AAFK,SALjB;AASE,QAAA,kBAAkB,MATpB;AAAA,gCAWE,QAAC,IAAD,CAAM,IAAN;AACE,UAAA,IAAI,EAAC,OADP;AAEE,UAAA,KAAK,EAAC,QAFR;AAGE,UAAA,KAAK,EAAE,CACL;AACEC,YAAAA,IAAI,EAAE,OADR;AAEEC,YAAAA,OAAO,EAAE;AAFX,WADK,EAKL;AACEC,YAAAA,QAAQ,EAAE,IADZ;AAEED,YAAAA,OAAO,EAAE;AAFX,WALK,CAHT;AAAA,iCAcE,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAdF;AAAA;AAAA;AAAA;AAAA,gBAXF,eA4BE,QAAC,IAAD,CAAM,IAAN;AACE,UAAA,IAAI,EAAC,UADP;AAEE,UAAA,KAAK,EAAC,UAFR;AAGE,UAAA,KAAK,EAAE,CACL;AACEC,YAAAA,QAAQ,EAAE,IADZ;AAEED,YAAAA,OAAO,EAAE;AAFX,WADK,CAHT;AASE,UAAA,WAAW,MATb;AAAA,iCAWE,QAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAXF;AAAA;AAAA;AAAA;AAAA,gBA5BF,eA0CE,QAAC,IAAD,CAAM,IAAN;AACE,UAAA,IAAI,EAAC,SADP;AAEE,UAAA,KAAK,EAAC,kBAFR;AAGE,UAAA,YAAY,EAAE,CAAC,UAAD,CAHhB;AAIE,UAAA,WAAW,MAJb;AAKE,UAAA,KAAK,EAAE,CACL;AACEC,YAAAA,QAAQ,EAAE,IADZ;AAEED,YAAAA,OAAO,EAAE;AAFX,WADK,EAKL,CAAC;AAAEE,YAAAA;AAAF,WAAD,MAAwB;AACtBC,YAAAA,SAAS,CAACC,CAAD,EAAIC,KAAJ,EAAW;AAClB,kBAAI,CAACA,KAAD,IAAUH,aAAa,CAAC,UAAD,CAAb,KAA8BG,KAA5C,EAAmD;AACjD,uBAAOC,OAAO,CAACC,OAAR,EAAP;AACD;;AACD,qBAAOD,OAAO,CAACE,MAAR,CACL,IAAIC,KAAJ,CACE,kDADF,CADK,CAAP;AAKD;;AAVqB,WAAxB,CALK,CALT;AAAA,iCAwBE,QAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAxBF;AAAA;AAAA;AAAA;AAAA,gBA1CF,eAqEE,QAAC,IAAD,CAAM,IAAN;AACE,UAAA,IAAI,EAAC,UADP;AAEE,UAAA,KAAK,EAAC,UAFR;AAGE,UAAA,OAAO,EAAC,sCAHV;AAIE,UAAA,KAAK,EAAE,CACL;AACER,YAAAA,QAAQ,EAAE,IADZ;AAEED,YAAAA,OAAO,EAAE,6BAFX;AAGEU,YAAAA,UAAU,EAAE;AAHd,WADK,CAJT;AAAA,iCAYE,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAZF;AAAA;AAAA;AAAA;AAAA,gBArEF,eAoFE,QAAC,IAAD,CAAM,IAAN;AACE,UAAA,IAAI,EAAC,WADP;AAEE,UAAA,KAAK,EAAC,oBAFR;AAGE,UAAA,KAAK,EAAE,CACL;AACEX,YAAAA,IAAI,EAAE,OADR;AAEEE,YAAAA,QAAQ,EAAE,IAFZ;AAGED,YAAAA,OAAO,EAAE;AAHX,WADK,CAHT;AAAA,iCAWE,QAAC,QAAD;AAAU,YAAA,OAAO,EAAEW;AAAnB;AAAA;AAAA;AAAA;AAAA;AAXF;AAAA;AAAA;AAAA;AAAA,gBApFF,eAkGE,QAAC,IAAD,CAAM,IAAN;AACE,UAAA,IAAI,EAAC,OADP;AAEE,UAAA,KAAK,EAAC,cAFR;AAGE,UAAA,KAAK,EAAE,CACL;AAAEV,YAAAA,QAAQ,EAAE,IAAZ;AAAkBD,YAAAA,OAAO,EAAE;AAA3B,WADK,CAHT;AAAA,iCAOE,QAAC,KAAD;AAAO,YAAA,WAAW,EAAEY,cAApB;AAAoC,YAAA,KAAK,EAAE;AAAEC,cAAAA,KAAK,EAAE;AAAT;AAA3C;AAAA;AAAA;AAAA;AAAA;AAPF;AAAA;AAAA;AAAA;AAAA,gBAlGF,eA4GE,QAAC,IAAD,CAAM,IAAN;AACE,UAAA,IAAI,EAAC,UADP;AAEE,UAAA,KAAK,EAAC,UAFR;AAGE,UAAA,KAAK,EAAE,CACL;AAAEZ,YAAAA,QAAQ,EAAE,IAAZ;AAAkBD,YAAAA,OAAO,EAAE;AAA3B,WADK,CAHT;AAAA,iCAOE,QAAC,WAAD;AACE,YAAA,UAAU,EAAEc,cADd;AAEE,YAAA,KAAK,EAAE;AAAED,cAAAA,KAAK,EAAE;AAAT;AAFT;AAAA;AAAA;AAAA;AAAA;AAPF;AAAA;AAAA;AAAA;AAAA,gBA5GF,eAyHE,QAAC,IAAD,CAAM,IAAN;AACE,UAAA,IAAI,EAAC,SADP;AAEE,UAAA,KAAK,EAAC,SAFR;AAGE,UAAA,KAAK,EAAE,CAAC;AAAEZ,YAAAA,QAAQ,EAAE,IAAZ;AAAkBD,YAAAA,OAAO,EAAE;AAA3B,WAAD,CAHT;AAAA,iCAKE,QAAC,YAAD;AACE,YAAA,OAAO,EAAEe,cADX;AAEE,YAAA,QAAQ,EAAEC,eAFZ;AAGE,YAAA,WAAW,EAAC,SAHd;AAAA,mCAKE,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AALF;AAAA;AAAA;AAAA;AAAA;AALF;AAAA;AAAA;AAAA;AAAA,gBAzHF,eAuIE,QAAC,IAAD,CAAM,IAAN;AACE,UAAA,IAAI,EAAC,QADP;AAEE,UAAA,KAAK,EAAC,QAFR;AAGE,UAAA,KAAK,EAAE,CAAC;AAAEf,YAAAA,QAAQ,EAAE,IAAZ;AAAkBD,YAAAA,OAAO,EAAE;AAA3B,WAAD,CAHT;AAAA,iCAKE,QAAC,MAAD;AAAQ,YAAA,WAAW,EAAC,oBAApB;AAAA,oCACE,QAAC,MAAD;AAAQ,cAAA,KAAK,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE,QAAC,MAAD;AAAQ,cAAA,KAAK,EAAC,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFF,eAGE,QAAC,MAAD;AAAQ,cAAA,KAAK,EAAC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAHF;AAAA;AAAA;AAAA;AAAA;AAAA;AALF;AAAA;AAAA;AAAA;AAAA,gBAvIF,eAmJE,QAAC,IAAD,CAAM,IAAN;AACE,UAAA,KAAK,EAAC,SADR;AAEE,UAAA,KAAK,EAAC,0CAFR;AAAA,iCAIE,QAAC,GAAD;AAAK,YAAA,MAAM,EAAE,CAAb;AAAA,oCACE,QAAC,GAAD;AAAK,cAAA,IAAI,EAAE,EAAX;AAAA,qCACE,QAAC,IAAD,CAAM,IAAN;AACE,gBAAA,IAAI,EAAC,SADP;AAEE,gBAAA,OAAO,MAFT;AAGE,gBAAA,KAAK,EAAE,CACL;AACEC,kBAAAA,QAAQ,EAAE,IADZ;AAEED,kBAAAA,OAAO,EAAE;AAFX,iBADK,CAHT;AAAA,uCAUE,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAVF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,oBADF,eAeE,QAAC,GAAD;AAAK,cAAA,IAAI,EAAE,EAAX;AAAA,qCACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,oBAfF;AAAA;AAAA;AAAA;AAAA;AAAA;AAJF;AAAA;AAAA;AAAA;AAAA,gBAnJF,eA4KE,QAAC,IAAD,CAAM,IAAN;AACE,UAAA,IAAI,EAAC,WADP;AAEE,UAAA,aAAa,EAAC,SAFhB;AAGE,UAAA,KAAK,EAAE,CACL;AACEG,YAAAA,SAAS,EAAE,CAACC,CAAD,EAAIC,KAAJ,KACTA,KAAK,GACDC,OAAO,CAACC,OAAR,EADC,GAEDD,OAAO,CAACE,MAAR,CAAe,IAAIC,KAAJ,CAAU,yBAAV,CAAf;AAJR,WADK,CAHT;AAAA,aAWMQ,kBAXN;AAAA,iCAaE,QAAC,QAAD;AAAA,wDACkB;AAAG,cAAA,IAAI,EAAC,EAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAbF;AAAA;AAAA;AAAA;AAAA,gBA5KF,eA6LE,QAAC,IAAD,CAAM,IAAN,OAAeA,kBAAf;AAAA,iCACE,QAAC,MAAD;AAAQ,YAAA,IAAI,EAAC,SAAb;AAAuB,YAAA,QAAQ,EAAC,QAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBA7LF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA,kBADF;AA0MD,CA3OD;;AA4OA,eAAe7C,cAAf","sourcesContent":["/* eslint-disable no-debugger */\r\nimport React, { useEffect, useState } from 'react'\r\nimport {\r\n  Card,\r\n  Row,\r\n  Form,\r\n  Input,\r\n  InputNumber,\r\n  Cascader,\r\n  Select,\r\n  Col,\r\n  Checkbox,\r\n  Button,\r\n  AutoComplete,\r\n} from 'antd'\r\nimport { BackwardOutlined } from '@ant-design/icons'\r\nconst { Option } = Select\r\nconst EmployeeDetail = (props) => {\r\n  const [employeeId, setEmployeeId] = useState(null)\r\n  const formItemLayout = {\r\n    labelCol: {\r\n      xs: { span: 24 },\r\n      lg: { span: 4 },\r\n    },\r\n    wrapperCol: {\r\n      xs: { span: 24 },\r\n      lg: { span: 10 },\r\n    },\r\n  }\r\n  const [form] = Form.useForm()\r\n  useEffect(() => {\r\n    const style = props.location.state.style\r\n    const id = props.location.state._id\r\n    if (style === 'edit') {\r\n      setEmployeeId(id)\r\n    }\r\n  }, [props])\r\n  const onBack = () => {\r\n    props.history.goBack()\r\n  }\r\n  const onFinish = (values: any) => {\r\n    console.log('Received values of form: ', values)\r\n  }\r\n  const title = (\r\n    <>\r\n      <Row>\r\n        <BackwardOutlined onClick={onBack} /> <span>Back to list page</span>\r\n      </Row>\r\n    </>\r\n  )\r\n  return (\r\n    <>\r\n      <h2>EmployeeDetail</h2>\r\n      <Card title={title} {...formItemLayout} form={form}>\r\n        <Form\r\n          {...formItemLayout}\r\n          form={form}\r\n          name=\"register\"\r\n          onFinish={onFinish}\r\n          initialValues={{\r\n            residence: ['zhejiang', 'hangzhou', 'xihu'],\r\n            prefix: '86',\r\n          }}\r\n          scrollToFirstError\r\n        >\r\n          <Form.Item\r\n            name=\"email\"\r\n            label=\"E-mail\"\r\n            rules={[\r\n              {\r\n                type: 'email',\r\n                message: 'The input is not valid E-mail!',\r\n              },\r\n              {\r\n                required: true,\r\n                message: 'Please input your E-mail!',\r\n              },\r\n            ]}\r\n          >\r\n            <Input />\r\n          </Form.Item>\r\n\r\n          <Form.Item\r\n            name=\"password\"\r\n            label=\"Password\"\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message: 'Please input your password!',\r\n              },\r\n            ]}\r\n            hasFeedback\r\n          >\r\n            <Input.Password />\r\n          </Form.Item>\r\n\r\n          <Form.Item\r\n            name=\"confirm\"\r\n            label=\"Confirm Password\"\r\n            dependencies={['password']}\r\n            hasFeedback\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message: 'Please confirm your password!',\r\n              },\r\n              ({ getFieldValue }) => ({\r\n                validator(_, value) {\r\n                  if (!value || getFieldValue('password') === value) {\r\n                    return Promise.resolve()\r\n                  }\r\n                  return Promise.reject(\r\n                    new Error(\r\n                      'The two passwords that you entered do not match!'\r\n                    )\r\n                  )\r\n                },\r\n              }),\r\n            ]}\r\n          >\r\n            <Input.Password />\r\n          </Form.Item>\r\n\r\n          <Form.Item\r\n            name=\"nickname\"\r\n            label=\"Nickname\"\r\n            tooltip=\"What do you want others to call you?\"\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message: 'Please input your nickname!',\r\n                whitespace: true,\r\n              },\r\n            ]}\r\n          >\r\n            <Input />\r\n          </Form.Item>\r\n\r\n          <Form.Item\r\n            name=\"residence\"\r\n            label=\"Habitual Residence\"\r\n            rules={[\r\n              {\r\n                type: 'array',\r\n                required: true,\r\n                message: 'Please select your habitual residence!',\r\n              },\r\n            ]}\r\n          >\r\n            <Cascader options={residences} />\r\n          </Form.Item>\r\n\r\n          <Form.Item\r\n            name=\"phone\"\r\n            label=\"Phone Number\"\r\n            rules={[\r\n              { required: true, message: 'Please input your phone number!' },\r\n            ]}\r\n          >\r\n            <Input addonBefore={prefixSelector} style={{ width: '100%' }} />\r\n          </Form.Item>\r\n\r\n          <Form.Item\r\n            name=\"donation\"\r\n            label=\"Donation\"\r\n            rules={[\r\n              { required: true, message: 'Please input donation amount!' },\r\n            ]}\r\n          >\r\n            <InputNumber\r\n              addonAfter={suffixSelector}\r\n              style={{ width: '100%' }}\r\n            />\r\n          </Form.Item>\r\n\r\n          <Form.Item\r\n            name=\"website\"\r\n            label=\"Website\"\r\n            rules={[{ required: true, message: 'Please input website!' }]}\r\n          >\r\n            <AutoComplete\r\n              options={websiteOptions}\r\n              onChange={onWebsiteChange}\r\n              placeholder=\"website\"\r\n            >\r\n              <Input />\r\n            </AutoComplete>\r\n          </Form.Item>\r\n\r\n          <Form.Item\r\n            name=\"gender\"\r\n            label=\"Gender\"\r\n            rules={[{ required: true, message: 'Please select gender!' }]}\r\n          >\r\n            <Select placeholder=\"select your gender\">\r\n              <Option value=\"male\">Male</Option>\r\n              <Option value=\"female\">Female</Option>\r\n              <Option value=\"other\">Other</Option>\r\n            </Select>\r\n          </Form.Item>\r\n\r\n          <Form.Item\r\n            label=\"Captcha\"\r\n            extra=\"We must make sure that your are a human.\"\r\n          >\r\n            <Row gutter={8}>\r\n              <Col span={12}>\r\n                <Form.Item\r\n                  name=\"captcha\"\r\n                  noStyle\r\n                  rules={[\r\n                    {\r\n                      required: true,\r\n                      message: 'Please input the captcha you got!',\r\n                    },\r\n                  ]}\r\n                >\r\n                  <Input />\r\n                </Form.Item>\r\n              </Col>\r\n              <Col span={12}>\r\n                <Button>Get captcha</Button>\r\n              </Col>\r\n            </Row>\r\n          </Form.Item>\r\n\r\n          <Form.Item\r\n            name=\"agreement\"\r\n            valuePropName=\"checked\"\r\n            rules={[\r\n              {\r\n                validator: (_, value) =>\r\n                  value\r\n                    ? Promise.resolve()\r\n                    : Promise.reject(new Error('Should accept agreement')),\r\n              },\r\n            ]}\r\n            {...tailFormItemLayout}\r\n          >\r\n            <Checkbox>\r\n              I have read the <a href=\"\">agreement</a>\r\n            </Checkbox>\r\n          </Form.Item>\r\n          <Form.Item {...tailFormItemLayout}>\r\n            <Button type=\"primary\" htmlType=\"submit\">\r\n              Register\r\n            </Button>\r\n          </Form.Item>\r\n        </Form>\r\n      </Card>\r\n    </>\r\n  )\r\n}\r\nexport default EmployeeDetail\r\n"]},"metadata":{},"sourceType":"module"}